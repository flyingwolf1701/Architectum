{
  "src/components/UserProfile.vue": {
    // Inferred from LSP symbol references
    "imports": [
      {"from": "src/services/UserService.js", "symbols": ["UserService"]},
      {"from": "src/services/AuthService.js", "symbols": ["AuthService"]}
    ],
    // Inferred from LSP type definitions and usage
    "types": {
      "UserUpdateData": {
        "kind": "interface",
        "properties": [
          {"name": "name", "type": "string"},
          {"name": "email", "type": "string", "optional": true},
          {"name": "preferences", "type": "UserPreferences"}
        ]
      }
    },
    // Inferred from exports in module
    "exports": {
      "default": "UserProfile",
      "named": ["formatUserData"]
    },
    "symbols": {
      "UserProfile": {
        "kind": "class",  // From LSP: 5 = Class
        // Inferred from template/component analysis
        "props": {
          "userId": {
            "type": "string",
            "required": true
          },
          "editable": {
            "type": "boolean",
            "default": false
          }
        },
        // Inferred from component template analysis
        "propsPassedToChildren": [
          {"ProfileImage": {"src": "userData.profileImage", "alt": "userData.name"}},
          {"EditableField": {"value": "userData.email", "label": "Email"}}
        ],
        // Inferred from component definition and template
        "events": {
          "emitted": [
            {"name": "profile-updated", "payload": "UserUpdateEvent"},
            {"name": "validation-error", "payload": "ValidationErrorEvent"}
          ],
          "listened": [
            {"name": "auth-change", "source": "src/services/AuthService.js"}
          ]
        },
        // Inferred from framework-specific patterns
        "lifecycle": ["created", "mounted", "beforeDestroy"],
        // Inferred from component template
        "directives": ["v-if", "v-for", "v-model"],
        // Inferred from store imports and usage patterns
        "stateUsage": {
          "reads": [
            {"store": "src/store/user.js", "getters": ["currentUser", "isAuthenticated"]}
          ],
          "mutations": [
            {"store": "src/store/user.js", "mutations": ["UPDATE_USER"]}
          ]
        },
        "methods": {
          "fetchUserData": {
            // Inferred from LSP Signature
            "parameters": [
              {"name": "userId", "type": "string"}
            ],
            // Inferred from LSP Signature
            "returnType": "Promise<UserData>",
            // Inferred from LSP References
            "relationships": {
              "calls_on": [
                {"getUserData": "src/services/UserService.js"},
                {"formatUserData": "src/components/UserProfile.vue"}
              ],
              "called_by": []
            }
          },
          "updateProfile": {
            // Inferred from LSP Signature
            "parameters": [
              {"name": "data", "type": "UserUpdateData"}
            ],
            // Inferred from LSP Signature
            "returnType": "Promise<boolean>",
            // Inferred from LSP References
            "relationships": {
              "calls_on": [
                {"updateUser": "src/services/UserService.js"},
                {"requiresAuth": "src/services/AuthService.js"}
              ],
              "called_by": []
            }
          }
        },
        // Inferred from LSP References (component-level aggregation)
        "relationships": {
          "calls_on": [
            {"getUserData": "src/services/UserService.js"},
            {"updateUser": "src/services/UserService.js"},
            {"requiresAuth": "src/services/AuthService.js"}
          ],
          "called_by": []
        }
      },
      "formatUserData": {
        "kind": "function",  // From LSP: 12 = Function
        // Inferred from LSP Signature
        "parameters": [
          {"name": "data", "type": "UserData"}
        ],
        // Inferred from LSP Signature
        "returnType": "FormattedUserData",
        // Inferred from LSP References (component-level aggregation)
        "relationships": {
          "calls_on": [],
          "called_by": [
            {"fetchUserData": "src/components/UserProfile.vue"}
          ]
        }
      }
    }
  },
  "src/services/UserService.js": {
    // Inferred from LSP symbol references
    "imports": [
      {"from": "src/api/ApiClient.js", "symbols": ["ApiClient"]}
    ],
    // Inferred from LSP type definitions
    "types": {
      "UserData": {
        "kind": "interface",
        "properties": [
          {"name": "id", "type": "string"},
          {"name": "name", "type": "string"},
          {"name": "email", "type": "string"},
          {"name": "createdAt", "type": "Date"}
        ]
      }
    },
    // Inferred from exports in module
    "exports": {
      "default": "UserService",
      "named": []
    },
    // Inferred from string literals and fetch/axios patterns
    "apiCalls": [
      {"method": "GET", "url": "/api/users/:id", "function": "getUserData"},
      {"method": "PUT", "url": "/api/users/:id", "function": "updateUser"}
    ],
    "symbols": {
      "UserService": {
        "kind": "class",  // From LSP: 5 = Class
        "methods": {
          "getUserData": {
            // Inferred from LSP Signature
            "parameters": [
              {"name": "id", "type": "string"}
            ],
            // Inferred from LSP Signature
            "returnType": "Promise<UserData>",
            // Inferred from LSP References
            "relationships": {
              "calls_on": [
                {"fetchData": "src/api/ApiClient.js"}
              ],
              "called_by": [
                {"fetchUserData": "src/components/UserProfile.vue"}
              ]
            }
          },
          "updateUser": {
            // Inferred from LSP Signature
            "parameters": [
              {"name": "id", "type": "string"},
              {"name": "data", "type": "Partial<UserData>"}
            ],
            // Inferred from LSP Signature
            "returnType": "Promise<boolean>",
            // Inferred from LSP References
            "relationships": {
              "calls_on": [
                {"updateData": "src/api/ApiClient.js"}
              ],
              "called_by": [
                {"updateProfile": "src/components/UserProfile.vue"}
              ]
            }
          }
        },
        // Inferred from LSP References
        "relationships": {
          "calls_on": [
            {"fetchData": "src/api/ApiClient.js"}
          ],
          "called_by": [
            {"fetchUserData": "src/components/UserProfile.vue"},
            {"updateProfile": "src/components/UserProfile.vue"},
            {"loadUserData": "src/components/UserSettings.vue"}
          ]
        }
      }
    }
  }
}